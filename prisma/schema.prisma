generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Type {
  aluno
  servidor
  funcionario
}

enum Status {
  reseved
  done
  canceled
  lacked
}

model Checkin {
  id        String   @id @default(uuid())
  status    Status   @default(reseved)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @map("user_id")
  menu      Menu     @relation(fields: [menuId], references: [id])
  menuId    String   @map("menu_id")

  @@map("checkin")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique @db.VarChar(50)
  password  String    @db.Char(60)
  type      Type      @default(aluno)
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  updatedAt DateTime  @default(now()) @db.Timestamp(6)
  aluno     Aluno?
  checkins  Checkin[]

  @@map("users")
}

model Aluno {
  matricula String   @id
  name      String?  @db.VarChar(255)
  turma     String   @db.VarChar(255)
  curso     String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique @map("user_id")

  @@map("alunos")
}

model Menu {
  id        String    @id @default(uuid())
  schedule  DateTime  @db.Timestamp(6)
  createdAt DateTime? @default(now()) @db.Timestamp(6)
  updatedAt DateTime? @default(now()) @db.Timestamp(6)
  foodId    String?   @map("food_id")
  localID   String    @map("local_id")
  Food      Food?     @relation(fields: [foodId], references: [id])
  local     Local     @relation(fields: [localID], references: [id])
  checkins  Checkin[]

  @@map("menu")
}

model Food {
  id          String       @id @default(uuid())
  name        String       @db.VarChar(100)
  description String?      @db.VarChar(255)
  createdAt   DateTime?    @default(now()) @db.Timestamp(6)
  updatedAt   DateTime?    @default(now()) @db.Timestamp(6)
  menus       Menu[]
  ingredients Ingredient[] @relation("FoodToIngredient")

  @@map("foods")
}

model Ingredient {
  id          String    @id @default(uuid())
  name        String    @db.VarChar(100)
  description String?   @db.VarChar(255)
  createdAt   DateTime? @default(now()) @db.Timestamp(6)
  updatedAt   DateTime? @default(now()) @db.Timestamp(6)
  foods       Food[]    @relation("FoodToIngredient")

  @@map("ingredients")
}

model Local {
  id        String    @id @default(uuid())
  address   String    @db.VarChar(100)
  createdAt DateTime? @default(now()) @db.Timestamp(6)
  updatedAt DateTime? @default(now()) @db.Timestamp(6)
  Menu      Menu[]

  @@map("locations")
}
